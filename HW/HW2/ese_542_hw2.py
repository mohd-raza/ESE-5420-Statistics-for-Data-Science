# -*- coding: utf-8 -*-
"""ESE 542 HW2.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1P6r2B9SHUdZ4qKz7qB14Q8vMLi2AZXt7

## Question 6
"""

import pandas as pd

data = pd.read_csv('./data_HW2.csv', header=None)
data.columns = ['observation']

data

sample_mean = sum(data['observation'])/len(data)

sample_mean

sum_sq = 0

for i in data['observation']:
  sum_sq += (i - sample_mean) ** 2

sample_variance = sum_sq/(len(data) - 1)

sample_variance

import numpy as np

numpy_sample_mean = np.mean(data['observation'])
numpy_sample_mean

numpy_sample_variance = np.var(data['observation'])
numpy_sample_variance

numpy_variance = np.var(data['observation'], ddof=1)
numpy_variance

#2
from scipy import stats

pop_mean = np.mean(data['observation'])

std_dev = 4
confidence_interval = .90
z_score = stats.norm.ppf(1 - (1 - confidence_interval) / 2)


error = z_score * std_dev / np.sqrt(len(data))

lower_interval = pop_mean -  error
higher_interval = pop_mean + error

lower_interval, higher_interval

"""## Question 7"""

#1
choice = [10,100,1000]

means_10 = []
means_100 = []
means_1000 = []

for i in choice:
  means = []
  for _ in range(2000):
    sample = np.random.randn(i)
    sample_mean = np.mean(sample)
    means.append(sample_mean)

    if i == 10:
      means_10 = means
    elif i == 100:
      means_100 = means
    elif i == 1000:
      means_1000 = means

import matplotlib.pyplot as plt
plt.hist(means_10)

plt.hist(means_100)

plt.hist(means_1000)

# X = []
# for i in range(1, 51):
#   positions = 0
#   for _ in range(1000):
#     x_o = 0
#     ch = np.random.choice(['H','T'])
#     if ch=='H':
#       x_o += 1
#     elif ch=='T':
#       x_o -= 1
#   X.append(x_o)

X = []

for i in range(1, 51):
    positions = []

    for _ in range(1000):
        x_o = 0

        for _ in range(i):
            ch = np.random.choice(['H', 'T'])
            if ch == 'H':
                x_o += 1
            else:
                x_o -= 1

        positions.append(x_o)

    X.append(positions)



data = []

for i in range(len(X)):
  mean = np.mean(X[i])
  variance = np.var(X[i])
  data.append({'n': i+1, 'mean': mean, 'variance': variance})

df = pd.DataFrame(data)

df

plt.plot(df['n'], df['mean'])

plt.plot(df['n'], df['variance'])

